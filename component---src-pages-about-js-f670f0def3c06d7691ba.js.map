{"version":3,"sources":["webpack:///./src/components/Tile/index.js","webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/NavBar/index.js"],"names":["StyledTile","styled","div","withConfig","displayName","componentId","props","backgroundImage","StyledOverlay","StyledColorOverlay","color","StyledGreyOverlay","StyledInner","StyledTitle","h3","StyledHorizontalLine","StyledSubtitle","p","Tile","react_default","a","createElement","overlayColor","title","subtitle","propTypes","PropTypes","string","onClick","func","defaultProps","IndexPage","gatsby_browser_entry","to","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","query","render","children","Error","object","isRequired","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","styled_components__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","StyledNavBar","transparent","css","loaded","undefined","StyledLogoLink","Link","StyledNav","nav","MenuButton","HamburgerIcon","NavItems","ul","NavBarLink","activeStyle","cursor","NavBar","logoTitle","logoSubtitle","xmlns","width","height","viewBox","preserveAspectRatio","x1","y1","x2","y2","bool"],"mappings":"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","file":"component---src-pages-about-js-f670f0def3c06d7691ba.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTile = styled.div`\n  color: white;\n  width: 100%;\n  /* width: 40%;\n  :nth-child(4n - 1),\n  :nth-child(4n - 2) {\n    width: 60%;\n  } */\n\n  height: 40vh;\n  max-height: 40rem;\n  min-height: 21.72rem;\n\n  @media screen and (max-width: 1680px) {\n    min-height: 17.9rem;\n    padding: 0rem 3rem 0rem;\n  }\n\n  @media screen and (max-width: 1280px) {\n    height: 30vh;\n    max-height: 30rem;\n    min-height: 13.4rem;\n    padding: 0rem 2rem 0rem;\n  }\n\n  @media screen and (max-width: 736px) {\n    height: 10.58rem;\n    max-height: unset;\n    min-height: 0;\n    padding: 0rem 1rem 0rem;\n  }\n\n  @media screen and (max-width: 480px) {\n    height: 34vh;\n  }\n\n  display: flex;\n  align-items: center;\n\n  cursor: pointer;\n  overflow: hidden;\n  padding: 0rem 3.778rem 0rem;\n  position: relative;\n  transition: transform 0.25s ease, opacity 0.25s ease, filter 1s ease;\n\n  background-image: ${props => `url(${props.backgroundImage})`};\n  background-position: 50%;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @media screen and (max-width: 980px) {\n    /* width: 50% !important; */\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 100% !important;\n  }\n`\n\nconst StyledOverlay = styled.div`\n  content: '';\n  display: block;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n`\n\nconst StyledColorOverlay = styled(StyledOverlay)`\n  background-color: ${props => props.color};\n  bottom: 0;\n  opacity: 0.85;\n  transition: opacity 0.5s ease;\n  z-index: 2;\n\n  ${StyledTile}:hover & {\n    opacity: 0;\n  }\n`\n\nconst StyledGreyOverlay = styled(StyledOverlay)`\n  background-color: rgba(36, 41, 67, 0.25);\n  top: 0;\n  z-index: 1;\n`\n\nconst StyledInner = styled.div`\n  position: relative;\n  z-index: 3;\n  width: max-content;\n`\n\nconst StyledTitle = styled.h3`\n  margin: 0;\n  width: calc(100% + 0.5rem);\n  font-size: 1.65rem;\n  letter-spacing: 0.025rem;\n  font-weight: 600;\n  line-height: 1.65;\n\n  @media screen and (max-width: 1680px) {\n    font-size: 1.35rem;\n  }\n\n  @media screen and (max-width: 1280px) {\n    font-size: 1.15rem;\n  }\n\n  @media screen and (max-width: 736px) {\n    font-size: 1rem;\n  }\n`\n\nconst StyledHorizontalLine = styled.div`\n  background-color: #fff;\n  content: '';\n  display: block;\n  height: 2px;\n  margin: 0.54rem 0 0.84rem;\n  width: 100%;\n\n  @media screen and (max-width: 1680px) {\n    margin: 0.45rem 0 0.65rem;\n  }\n\n  @media screen and (max-width: 1280px) {\n    margin: 0.38rem 0 0.6rem;\n  }\n\n  @media screen and (max-width: 736px) {\n    margin: 0.33rem 0 0.5rem;\n  }\n`\n\nconst StyledSubtitle = styled.p`\n  font-size: 0.68rem;\n  font-weight: 600;\n  letter-spacing: 0.155rem;\n  margin-bottom: 0;\n  text-transform: uppercase;\n\n  @media screen and (max-width: 1680px) {\n    font-size: 0.57rem;\n    letter-spacing: 0.13rem;\n  }\n\n  @media screen and (max-width: 1280px) {\n    font-size: 0.48rem;\n    letter-spacing: 0.11rem;\n  }\n`\n\nconst Tile = props => (\n  <StyledTile {...props}>\n    <StyledColorOverlay color={props.overlayColor} />\n    <StyledInner>\n      <StyledTitle>{props.title}</StyledTitle>\n      <StyledHorizontalLine />\n      <StyledSubtitle>{props.subtitle}</StyledSubtitle>\n    </StyledInner>\n    <StyledGreyOverlay />\n  </StyledTile>\n)\n\nTile.propTypes = {\n  backgroundImage: PropTypes.string,\n  overlayColor: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nTile.defaultProps = {\n  backgroundImage:\n    'https://gatsby-forty.surge.sh/static/pic01-f7c500d0c7ce97f4fa08f6f797eaf142.jpg',\n  overlayColor: 'transparent',\n  title: 'Title',\n  subtitle: 'Subtitle',\n}\n\nexport default Tile\n","// import Layout from '../components/Layout'\nimport { Link } from 'gatsby'\nimport NavBar from '../components/NavBar'\nimport React from 'react'\nimport Tile from '../components/Tile'\nimport styled from 'styled-components'\n\n// const StyledTilesContainer = styled.div`\n//   display: flex;\n//   flex-wrap: wrap;\n// `\n\nconst IndexPage = () => {\n  return (\n    <div>\n      <Link to=\"/\">Hello</Link>\n      {/* <NavBar logoTitle=\"Hello\" logoSubtitle=\"There\" /> */}\n      {/* <StyledTilesContainer> */}\n      {/* <Tile\n          title=\"Aliquam\"\n          subtitle=\"Ipsum Dolor Sit Amet\"\n          overlayColor=\"#6dc2df\"\n        /> */}\n      {/* <Tile\n          title=\"Portfolio\"\n          subtitle=\"Check out my work\"\n          overlayColor=\"#8d82c4\"\n        /> */}\n      {/* </StyledTilesContainer> */}\n    </div>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled, { css } from 'styled-components'\n\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst StyledNavBar = styled.div`\n  height: 3.07rem;\n  letter-spacing: 0.236rem;\n  line-height: 4.1;\n\n  position: fixed;\n  z-index: 10000;\n  left: 0;\n  top: 0;\n  display: flex;\n  width: 100%;\n  margin: 0;\n\n  color: white;\n  background-color: #2a2f4a;\n  box-shadow: 0 0 0.25rem 0 rgba(0, 0, 0, 0.15);\n  font-weight: bold;\n  text-transform: uppercase;\n  cursor: default;\n\n  ${props =>\n    props.transparent === true\n      ? css`\n          animation: none;\n          background-color: transparent;\n          box-shadow: none;\n          position: absolute;\n          transition: opacity 2.5s ease;\n          transition-delay: 0.75s;\n        `\n      : ''}\n\n  opacity: 0;\n  ${props =>\n    props.loaded === true || props.loaded === undefined\n      ? css`\n          opacity: 1;\n        `\n      : ''}\n\n  @media screen and (max-width: 1680px) {\n    letter-spacing: 0.2rem;\n    line-height: 4;\n  }\n\n  @media screen and (max-width: 1280px) {\n    letter-spacing: 0.17rem;\n  }\n\n  @media screen and (max-width: 980px) {\n    line-height: 4.1;\n  }\n\n  @media screen and (max-width: 736px) {\n    line-height: 3.5;\n  }\n\n  @media screen and (max-width: 480px) {\n  }\n\n  @media screen and (max-width: 360px) {\n  }\n`\n\nconst StyledLogoLink = styled(Link)`\n  font-size: 0.755rem;\n  border: 0;\n  display: inline-block;\n  height: inherit;\n  padding: 0 1.14rem;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out, border-bottom-color 0.2s ease-in-out;\n  cursor: pointer;\n\n  & strong {\n    line-height: 1.24rem;\n    color: #242943;\n    background-color: #fff;\n    display: inline-block;\n    margin-right: 0.25rem;\n    padding: 0 0.1rem 0 0.28rem;\n    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n  }\n\n  &:hover {\n    color: #9bf1ff;\n  }\n\n  &:hover strong {\n    background-color: #9bf1ff;\n  }\n\n  &:active {\n    color: #53e3fb;\n  }\n\n  &:active strong {\n    background-color: #53e3fb;\n  }\n\n  @media screen and (max-width: 1680px) {\n    font-size: 0.62rem;\n    padding: 0 0 0 0.9rem;\n\n    & strong {\n      line-height: 1rem;\n      margin-right: 0.18rem;\n      padding: 0 0.07rem 0 0.25rem;\n    }\n  }\n\n  @media screen and (max-width: 1280px) {\n    font-size: 0.53rem;\n    padding: 0 0.8rem;\n\n    & strong {\n      line-height: 0.9rem;\n      margin-right: 0.17rem;\n      padding: 0 0.05rem 0 0.2rem;\n    }\n  }\n\n  @media screen and (max-width: 736px) {\n    padding: 0 0.55rem;\n  }\n\n  @media screen and (max-width: 480px) {\n    & span {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 360px) {\n  }\n`\n\nconst StyledNav = styled.nav`\n  display: flex;\n  flex-grow: 1;\n  justify-content: flex-end;\n`\n\nconst MenuButton = styled.div`\n  display: none;\n\n  & p {\n    cursor: pointer;\n    display: block;\n    font-size: 0.75rem;\n    transition: color 0.2s ease-in-out, border-bottom-color 0.2s ease-in-out;\n    margin-bottom: 0;\n  }\n\n  &:hover p {\n    color: #9bf1ff;\n  }\n\n  &:active p {\n    color: #53e3fb;\n  }\n\n  &:hover line {\n    stroke: #9bf1ff;\n  }\n\n  &:active line {\n    stroke: #53e3fb;\n  }\n\n  @media screen and (max-width: 980px) {\n    /* display: flex; */\n  }\n`\n\nconst HamburgerIcon = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding-right: 1.5rem;\n  padding-left: 0.42rem;\n\n  & line {\n    stroke-width: 2px;\n    stroke: #ffffff;\n  }\n`\n\nconst NavItems = styled.ul`\n  display: flex;\n  font-size: 0.75rem;\n  letter-spacing: 0.1rem;\n\n  & li {\n    list-style: none;\n    padding-right: 1.5rem;\n    cursor: pointer;\n    text-shadow: 0px 2px 7px #000;\n  }\n\n  & li:hover {\n    color: #9bf1ff;\n  }\n\n  & li:active {\n    color: #9bf1ff;\n  }\n\n  @media screen and (max-width: 1680px) {\n    font-size: 0.62rem;\n  }\n\n  @media screen and (max-width: 1280px) {\n    font-size: 0.53rem;\n  }\n\n  @media screen and (max-width: 980px) {\n    /* display: none; */\n  }\n\n  @media screen and (max-width: 736px) {\n    & li {\n      padding-right: 1.2rem;\n    }\n\n    & li:last-child {\n      padding-right: 0.55rem;\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    margin-left: 0;\n\n    & li {\n      padding-right: 1rem;\n    }\n  }\n\n  @media screen and (max-width: 360px) {\n    & li {\n      padding-right: 0.6rem;\n    }\n\n    & li:last-child {\n      padding-right: 0.3rem;\n    }\n  }\n`\n\nconst NavBarLink = props => (\n  <Link\n    to={props.to}\n    activeStyle={{\n      color: '#9bf1ff',\n      cursor: 'default',\n    }}\n  >\n    {props.children}\n  </Link>\n)\n\nconst NavBar = props => {\n  return (\n    <StyledNavBar {...props}>\n      <StyledLogoLink to=\"/\" activeStyle={{ cursor: 'default' }}>\n        <strong>{props.logoTitle}</strong> <span>{props.logoSubtitle}</span>\n      </StyledLogoLink>\n      <StyledNav>\n        <NavItems>\n          <li>\n            <NavBarLink to=\"/\">About Me</NavBarLink>\n          </li>\n          <li>\n            <NavBarLink to=\"/portfolio\">Portfolio</NavBarLink>\n          </li>\n        </NavItems>\n        <MenuButton>\n          <p>Menu</p>\n          <HamburgerIcon>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"32\"\n              viewBox=\"0 0 24 32\"\n              preserveAspectRatio=\"none\"\n            >\n              <line x1=\"0\" y1=\"11\" x2=\"24\" y2=\"11\" />\n              <line x1=\"0\" y1=\"21\" x2=\"24\" y2=\"21\" />\n              <line x1=\"0\" y1=\"16\" x2=\"24\" y2=\"16\" />\n            </svg>\n          </HamburgerIcon>\n        </MenuButton>\n      </StyledNav>\n    </StyledNavBar>\n  )\n}\n\nNavBar.propTypes = {\n  transparent: PropTypes.bool,\n  logoTitle: PropTypes.string,\n  logoSubtitle: PropTypes.string,\n}\n\nNavBar.defaultProps = {\n  transparent: false,\n}\n\nexport default NavBar\n"],"sourceRoot":""}
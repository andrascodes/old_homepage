{"version":3,"sources":["webpack:///./src/components/PortfolioItem/Carousel/index.js","webpack:///./src/components/PortfolioItem/index.js","webpack:///./src/pages/portfolio.js"],"names":["StyledDotGroup","styled","DotGroup","withConfig","displayName","componentId","props","color","Carousel","aspectRatio","images","node","childImageSharp","sizes","react_default","a","createElement","index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","length","map","img","index","key","gatsby_image_default","title","alt","dotColor","propTypes","PropTypes","arrayOf","any","isRequired","string","defaultProps","Container","div","bgColor","Inner","Title","h3","TitleName","span","undefined","css","TitlePitch","CarouselContainer","InfoContainer","List","ul","ListItem","li","ListItemTitle","ListItemInfo","Description","p","PortfolioItem","renderTitle","renderTitleName","renderTitlePitch","renderList","renderDescription","react","components_PortfolioItem_Carousel","func","__webpack_require__","d","__webpack_exports__","sizedImages","pageQuery","PortfolioPage","bannerBgImgData","data","BannerBgImgData","trailImgData","TrailImgs","edges","coliviaImgData","ColiviaImgs","lifecalendarImgData","LifeCalendarImgs","meetupBotImgData","MeetupBotImgs","qrAnalyticsImgData","QRAnalyticsImgs","populismImgData","PopulismImgs","sortingHatImgData","SortingHatImgData","chatlerLandingImgData","ChatlerLandingImgData","Layout","withButton","withContacts","logoTitle","logoSubtitle","subtitle","bannerBgImage","bannerBgColor","pageTitle","components_PortfolioItem","_ref","rel","href","target","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7"],"mappings":"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","file":"component---src-pages-portfolio-js-bc0b3f064eb464eb355a.js","sourcesContent":["import './index.css'\n\nimport { CarouselProvider, DotGroup, Slide, Slider } from 'pure-react-carousel'\nimport PropTypes, { any } from 'prop-types'\n\nimport Img from 'gatsby-image'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDotGroup = styled(DotGroup)`\n  & button {\n    background-color: ${props => props.color};\n  }\n`\n\nconst Carousel = props => {\n  const { aspectRatio } = props.images[0].node.childImageSharp.sizes\n  return (\n    <CarouselProvider\n      naturalSlideWidth={aspectRatio}\n      naturalSlideHeight={1}\n      totalSlides={props.images.length}\n    >\n      <Slider>\n        {props.images.map((img, index) => (\n          <Slide index={index} key={`slide-${index}`}>\n            <Img\n              title={'Portfolio item screenshot'}\n              alt=\"Screenshot\"\n              sizes={img.node.childImageSharp.sizes}\n            />\n          </Slide>\n        ))}\n      </Slider>\n      <StyledDotGroup color={props.dotColor} />\n    </CarouselProvider>\n  )\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(any).isRequired,\n  dotColor: PropTypes.string,\n}\n\nCarousel.defaultProps = {\n  dotColor: '#fff',\n}\n\nexport default Carousel\n","import PropTypes, { any } from 'prop-types'\nimport React, { Fragment } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Carousel from './Carousel'\n\nconst Container = styled.div`\n  --text-color: ${props => props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--text-color);\n  background-color: ${props => props.bgColor};\n\n  & a {\n    color: var(--text-color);\n    text-decoration: underline;\n    /* border-bottom: 1px solid; */\n  }\n\n  & a:visited {\n    color: var(--text-color);\n  }\n\n  @media screen and (max-width: 1024px) {\n    &:first-child div {\n      margin-top: 0;\n    }\n  }\n`\n\nconst Inner = styled.div`\n  margin: 2.5rem 0;\n  width: 60%;\n\n  @media screen and (max-width: 1680px) {\n  }\n  @media screen and (max-width: 1280px) {\n  }\n  @media screen and (max-width: 980px) {\n    /* &:first-child {\n      margin: 0;\n    } */\n  }\n  @media screen and (max-width: 768px) {\n    width: 80%;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 90%;\n  }\n\n  @media screen and (max-width: 360px) {\n  }\n`\n\nconst Title = styled.h3`\n  padding: 0rem 0.2rem;\n\n  @media screen and (max-width: 480px) {\n    font-size: 1.1rem;\n  }\n`\n\nconst TitleName = styled.span`\n  font-weight: 700;\n  ${props => {\n    if (props.bgColor !== undefined) {\n      return css`\n        background-color: ${props.bgColor};\n        padding: 0 0.5rem;\n      `\n    }\n    if (props.color !== undefined) {\n      return css`\n        color: ${props.color};\n      `\n    }\n  }}\n`\n\nconst TitlePitch = styled.span`\n  font-weight: 400;\n`\n\nconst CarouselContainer = styled.div`\n  margin-bottom: 1rem;\n`\n\nconst InfoContainer = styled.div`\n  display: flex;\n  /* align-items: center; */\n  justify-content: center;\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`\n\nconst List = styled.ul`\n  flex-basis: 50%;\n  margin-bottom: 0;\n\n  @media screen and (max-width: 480px) {\n    flex-basis: 100%;\n    margin-top: 0.5rem;\n    margin-bottom: 1rem;\n    align-self: center;\n    margin-left: 0;\n  }\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  margin: 0;\n  font-size: 0.567rem;\n  color: ${props => (props.color ? props.color : '#000')};\n\n  &::before {\n    content: '■';\n    font-weight: bold;\n    display: inline-block;\n    width: 1em;\n    margin-left: -1em;\n  }\n`\n\nconst ListItemTitle = styled.span`\n  margin-right: 0.5rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 0.03rem;\n`\n\nconst ListItemInfo = styled.span`\n  color: ${props => (props.color ? props.color : '#000')};\n`\n\nconst Description = styled.p`\n  flex-basis: 70%;\n  font-size: 0.567rem;\n  margin-bottom: 0;\n`\n\nconst PortfolioItem = props => {\n  const {\n    renderTitle,\n    renderTitleName,\n    renderTitlePitch,\n    renderList,\n    renderDescription,\n  } = props\n\n  return (\n    <Container color={props.color} bgColor={props.bgColor}>\n      <Inner>\n        <Title>\n          {renderTitle !== undefined ? (\n            renderTitle({ color: props.color })\n          ) : (\n            <Fragment>\n              <TitleName>{renderTitleName({ color: props.color })}</TitleName>\n              {`  —  `}\n              <TitlePitch>\n                {renderTitlePitch({ color: props.color })}\n              </TitlePitch>\n            </Fragment>\n          )}\n        </Title>\n        <CarouselContainer>\n          <Carousel images={props.images} dotColor={props.color} />\n        </CarouselContainer>\n        <InfoContainer>\n          <List>{renderList({ color: props.color })}</List>\n          <Description>{renderDescription()}</Description>\n        </InfoContainer>\n      </Inner>\n    </Container>\n  )\n}\n\nPortfolioItem.propTypes = {\n  images: PropTypes.arrayOf(any).isRequired,\n  color: PropTypes.string,\n  bgColor: PropTypes.string,\n  renderTitle: PropTypes.func,\n  renderTitleName: PropTypes.func,\n  renderTitlePitch: PropTypes.func,\n  renderList: PropTypes.func,\n  renderDescription: PropTypes.func,\n}\n\nPortfolioItem.defaultProps = {\n  color: '#fff',\n  bgColor: '#2a2f4a',\n  title: 'Title',\n}\n\nexport default PortfolioItem\n\nexport { Title, TitleName, TitlePitch, ListItem, ListItemTitle, ListItemInfo }\n","import PortfolioItem, {\n  ListItem,\n  ListItemInfo,\n  ListItemTitle,\n  Title,\n  TitleName,\n  TitlePitch,\n} from '../components/PortfolioItem'\nimport React, { Fragment } from 'react'\n\nimport Layout from '../components/Layout'\nimport { graphql } from 'gatsby'\n\nconst PortfolioPage = props => {\n  const bannerBgImgData = props.data.BannerBgImgData\n  const { edges: trailImgData } = props.data.TrailImgs\n  const { edges: coliviaImgData } = props.data.ColiviaImgs\n  const { edges: lifecalendarImgData } = props.data.LifeCalendarImgs\n  const { edges: meetupBotImgData } = props.data.MeetupBotImgs\n  const { edges: qrAnalyticsImgData } = props.data.QRAnalyticsImgs\n  const { edges: populismImgData } = props.data.PopulismImgs\n  const { edges: sortingHatImgData } = props.data.SortingHatImgData\n  const { edges: chatlerLandingImgData } = props.data.ChatlerLandingImgData\n\n  return (\n    <Layout\n      withButton={false}\n      withContacts\n      logoTitle=\"András\"\n      logoSubtitle=\"Szücs\"\n      title=\"Portfolio\"\n      subtitle={[\n        'I am passionate about building innovative',\n        'products with cutting-edge technology',\n      ]}\n      bannerBgImage={bannerBgImgData}\n      bannerBgColor=\"#110023\"\n      pageTitle=\"Portfolio\"\n    >\n      <div>\n        <PortfolioItem\n          images={trailImgData}\n          color=\"#ecf0f1\"\n          bgColor=\"#110023\"\n          renderTitleName={() => 'Trail'}\n          renderTitlePitch={() =>\n            'Building the next-generation gaming experience'\n          }\n          renderList={({ color }) => (\n            <Fragment>\n              <ListItem color={color}>\n                <ListItemTitle>Company:</ListItemTitle>\n                <ListItemInfo color={color}>\n                  <a\n                    rel=\"noopener noreferrer\"\n                    href=\"https://www.trail.gg/\"\n                    target=\"_blank\"\n                  >\n                    Trail Games AB\n                  </a>\n                </ListItemInfo>\n              </ListItem>\n              <ListItem color={color}>\n                <ListItemTitle>Role:</ListItemTitle>\n                <ListItemInfo color={color}>Frontend Developer</ListItemInfo>\n              </ListItem>\n              <ListItem color={color}>\n                <ListItemTitle>Date:</ListItemTitle>\n                <ListItemInfo color={color}>2018. May-June</ListItemInfo>\n              </ListItem>\n            </Fragment>\n          )}\n          renderDescription={() =>\n            `Developed a frontend application similar to Netflix's web app for a\n            company bringing native quality gaming into the browsers. Worked\n            together with the designer and the CTO to rewrite the frontend\n            client from EmberJS to ReactJS.`\n          }\n        />\n\n        <PortfolioItem\n          images={coliviaImgData}\n          color=\"#1A224C\"\n          bgColor=\"#EDE5E1\"\n          renderTitleName={() => 'Colivia'}\n          renderTitlePitch={() =>\n            'Making the healthcare staffing process more efficient through better data input tools and data visualization'\n          }\n          renderList={({ color }) => (\n            <Fragment>\n              <ListItem color={color}>\n                <ListItemTitle>Company:</ListItemTitle>\n                <ListItemInfo color={color}>\n                  <a\n                    rel=\"noopener noreferrer\"\n                    href=\"https://colivia.se/\"\n                    target=\"_blank\"\n                  >\n                    Colivia Sweden AB\n                  </a>\n                </ListItemInfo>\n              </ListItem>\n              <ListItem color={color}>\n                <ListItemTitle>Role:</ListItemTitle>\n                <ListItemInfo color={color}>\n                  Full Stack Developer &#38; UX Designer\n                </ListItemInfo>\n              </ListItem>\n              <ListItem color={color}>\n                <ListItemTitle>Date:</ListItemTitle>\n                <ListItemInfo color={color}>2019. March-September</ListItemInfo>\n              </ListItem>\n            </Fragment>\n          )}\n          renderDescription={() =>\n            `Designed and developed an in-house system for digitalizing healthcare\n             job assignments and visualizing them to the company’s sales staff. \n             Ran an iterative participatory design process to create a UI that eased \n             the sales employees every-day workflow immensely. \n             Then implemented the design using React, Apollo, GraphQL and Node.js`\n          }\n        />\n\n        <PortfolioItem\n          images={lifecalendarImgData}\n          color=\"#000\"\n          bgColor=\"#dfe6e9\"\n          renderTitleName={() => 'Lifecalendar'}\n          renderTitlePitch={() =>\n            'Visualizing your life to serve as a daily reminder to only worry about things that truly matter'\n          }\n          renderList={() => {\n            const color = '#00000080'\n            return (\n              <Fragment>\n                <ListItem color={color}>\n                  <ListItemTitle>Project:</ListItemTitle>\n                  <ListItemInfo>Own Side-project</ListItemInfo>\n                </ListItem>\n                <ListItem color={color}>\n                  <ListItemTitle>Date:</ListItemTitle>\n                  <ListItemInfo>2018. March</ListItemInfo>\n                </ListItem>\n                <ListItem color={color}>\n                  <ListItemTitle>Demo:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://andrewszucs.github.io/lifecalendar/\"\n                      target=\"_blank\"\n                    >\n                      Visit Demo\n                    </a>\n                    {` / `}\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://chrome.google.com/webstore/detail/lifecalendar-extension/icebmcdnlmgejfkplolagngalhpkjhan\"\n                      target=\"_blank\"\n                    >\n                      Chrome Store\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n                <ListItem color={color}>\n                  <ListItemTitle>Code:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://github.com/andrewszucs/lifecalendar\"\n                      target=\"_blank\"\n                    >\n                      Github repo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n              </Fragment>\n            )\n          }}\n          renderDescription={() =>\n            `A Chrome New-tab Extension and web application visualizing how much time you have got to live. \n            Developed with ReactJS with an emphasis on responsivity. \n            During the project I experimented with creating a multi-platform build process \n            for Chrome and the web.\n            `\n          }\n        />\n\n        <PortfolioItem\n          images={meetupBotImgData}\n          color=\"#fff\"\n          bgColor=\"#0086ff\"\n          renderTitle={() => (\n            <Title>\n              <TitleName>MeetupBot</TitleName>\n              {` — `}\n              <TitlePitch>Engaging a MeetupGroup through Messenger</TitlePitch>\n            </Title>\n          )}\n          renderList={({ color }) => {\n            const listItemColor = '#fff'\n            return (\n              <Fragment>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Project:</ListItemTitle>\n                  <ListItemInfo color={listItemColor}>\n                    Own Side-project\n                  </ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Date:</ListItemTitle>\n                  <ListItemInfo color={listItemColor}>\n                    2016. September\n                  </ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Demo:</ListItemTitle>\n                  <ListItemInfo>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://youtu.be/xU7-SJ-9mfU\"\n                      target=\"_blank\"\n                    >\n                      Watch on YouTube\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Code:</ListItemTitle>\n                  <ListItemInfo>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://github.com/andrewszucs/bpbotsmeetup\"\n                      target=\"_blank\"\n                    >\n                      Github repo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n              </Fragment>\n            )\n          }}\n          renderDescription={() =>\n            `A Messenger Chatbot application developed for the Budapest Bots Meetup group \n          to engage the participants both during and in-between meetups. \n          Features include: automatic meetup notification, event information, newsletter subscription, \n          Q&A question submission and feedback sending. Developed with NodeJS and MongoDB.`\n          }\n        />\n\n        <PortfolioItem\n          images={qrAnalyticsImgData}\n          color=\"#d2dae2\"\n          bgColor=\"#000\"\n          renderTitleName={() => 'QuikReply Analytics'}\n          renderTitlePitch={() =>\n            'Exploring what an Analytics service could look like for chatbots'\n          }\n          renderList={({ color }) => {\n            const listItemColor = '#ffffff'\n            return (\n              <Fragment>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Project:</ListItemTitle>\n                  <ListItemInfo color={color}>Bachelor Thesis</ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Date:</ListItemTitle>\n                  <ListItemInfo color={color}>2017. May</ListItemInfo>\n                </ListItem>\n                {/* <ListItem color={listItemColor}>\n                <ListItemTitle>Demo:</ListItemTitle>\n                <ListItemInfo color={color}>\n                  <a\n                    rel=\"noopener noreferrer\"\n                    href=\"https://andrewszucs.github.io/lifecalendar/\"\n                    target=\"_blank\"\n                  >\n                    Visit Demo\n                  </a>\n                </ListItemInfo>\n              </ListItem> */}\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Code:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://github.com/andrewszucs/quikreply-bot\"\n                      target=\"_blank\"\n                    >\n                      Github repo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n              </Fragment>\n            )\n          }}\n          renderDescription={() =>\n            `All-in-one chatbot and analytics application for Messenger.\n          Designed and developed the project on my own using ReactJS, NodeJS and \n          Machine Learning tools in Python for the Natural Language Processing API.\n          Used testing tools such as Jest and Tape during the development.\n            `\n          }\n        />\n\n        <PortfolioItem\n          images={chatlerLandingImgData}\n          color=\"#5324fb\"\n          bgColor=\"#daf5fd\"\n          renderTitleName={() => 'Chatler.ai website'}\n          renderTitlePitch={() =>\n            'Presenting the value proposition of an automatic \"chat-butler\"'\n          }\n          renderList={({ color }) => {\n            return (\n              <Fragment>\n                <ListItem color={color}>\n                  <ListItemTitle>Company:</ListItemTitle>\n                  <ListItemInfo color={color}>Chatler.ai Ltd</ListItemInfo>\n                </ListItem>\n                <ListItem color={color}>\n                  <ListItemTitle>Date:</ListItemTitle>\n                  <ListItemInfo color={color}>2017. January</ListItemInfo>\n                </ListItem>\n              </Fragment>\n            )\n          }}\n          renderDescription={() =>\n            `Landing page developed for the Chatler.ai company.\n          Combined Gulp, Pug and SASS to create a Static-Site Generator behind the website, which provides:\n          compilation commands, live reloading and easy deployment to AWS..\n          `\n          }\n        />\n\n        <PortfolioItem\n          images={populismImgData}\n          color=\"#000\"\n          bgColor=\"#fff\"\n          renderTitleName={() => 'Populist Countries'}\n          renderTitlePitch={() =>\n            'Exploring the factors that could contribute to the rise of populism through information visualization'\n          }\n          renderList={({ color }) => {\n            const listItemColor = '#000000'\n            return (\n              <Fragment>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Project:</ListItemTitle>\n                  <ListItemInfo color={color}>School Project</ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Date:</ListItemTitle>\n                  <ListItemInfo color={color}>2018. February</ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Demo:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://andrewszucs.github.io/info-viz-project2/\"\n                      target=\"_blank\"\n                    >\n                      Visit Demo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Code:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://github.com/andrewszucs/info-viz-project2\"\n                      target=\"_blank\"\n                    >\n                      Github repo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n              </Fragment>\n            )\n          }}\n          renderDescription={() =>\n            `Combined data from the World Values Survey and Gapminder to help the exploration of countries\n          around the world in regards to the rise of populism. Used ReactJS to develop the visualization\n          components.\n            `\n          }\n        />\n\n        <PortfolioItem\n          images={sortingHatImgData}\n          color=\"#000\"\n          bgColor=\"#fbc531\"\n          renderTitleName={() => 'The Sorting Hat'}\n          renderTitlePitch={() =>\n            'Creating fair groups in a university class with the use of data exploration'\n          }\n          renderList={({ color }) => {\n            const listItemColor = '#000'\n            return (\n              <Fragment>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Project:</ListItemTitle>\n                  <ListItemInfo color={color}>School Project</ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Date:</ListItemTitle>\n                  <ListItemInfo color={color}>2018. January</ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Demo:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://andrewszucs.github.io/info-viz-project1/\"\n                      target=\"_blank\"\n                    >\n                      Visit Demo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n                <ListItem color={listItemColor}>\n                  <ListItemTitle>Code:</ListItemTitle>\n                  <ListItemInfo color={color}>\n                    <a\n                      rel=\"noopener noreferrer\"\n                      href=\"https://github.com/andrewszucs/info-viz-project1\"\n                      target=\"_blank\"\n                    >\n                      Github repo\n                    </a>\n                  </ListItemInfo>\n                </ListItem>\n              </Fragment>\n            )\n          }}\n          renderDescription={() =>\n            `Visualized survey data for the Information Visualization class of 2018 \n          at KTH Stockholm. The web application includes an automatic group creator and the \n          tool to fine-tune the selections. Used the KMeans clustering algorithm to group the students\n          based on their interests as well.\n            `\n          }\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport default PortfolioPage\n\nexport const sizedImages = graphql`\n  fragment sizedImages on File {\n    childImageSharp {\n      sizes(maxWidth: 1170, quality: 90) {\n        ...GatsbyImageSharpSizes\n      }\n    }\n  }\n`\n\nexport const pageQuery = graphql`\n  query portfolioImgsQuery {\n    BannerBgImgData: file(relativePath: { eq: \"portfolio_banner.png\" }) {\n      childImageSharp {\n        fluid(\n          maxWidth: 1440\n          duotone: { highlight: \"#ffffff\", shadow: \"#110023\", opacity: 100 }\n          quality: 90\n        ) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n\n    ColiviaImgs: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/colivia/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    TrailImgs: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/trail/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    LifeCalendarImgs: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/lifecalendar/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    MeetupBotImgs: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/meetupbot/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    QRAnalyticsImgs: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/qranalytics/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    PopulismImgs: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/populism/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    SortingHatImgData: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/sortinghat/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n\n    ChatlerLandingImgData: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: { relativePath: { regex: \"/projects/chatlerlanding/.*.png/\" } }\n    ) {\n      edges {\n        node {\n          ...sizedImages\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}